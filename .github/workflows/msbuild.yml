# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference

      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:DebugSymbols=true /p:DebugType=full ${{env.SOLUTION_FILE_PATH}} 
      
    - name: Setup VSTest and add to PATH
      uses: darenm/Setup-VSTest@v1
      id: setup_vstest
      
    - name: Install OpenCppCoverage
      run: |
        choco install OpenCppCoverage
        echo "C:\Program Files\OpenCppCoverage" >> $env:GITHUB_PATH
        
    - name: Generate Coverage Report
      shell: cmd

      run: OpenCppCoverage --modules=D:\a\MiniGame-Madness\MiniGame-Madness\x64\Release --export_type cobertura:MiniGame-Madness.xml  -- "vstest.console.exe" x64\Release\tests.dll 

    - name: Upload Report to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        files: MiniGame-Madness.xml
        token: ${{ secrets.CODECOV_TOKEN }}
